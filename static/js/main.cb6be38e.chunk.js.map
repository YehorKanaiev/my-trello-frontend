{"version":3,"sources":["Pages/Board/components/Card/Card.tsx","Pages/Board/components/List/List.tsx","Pages/Board/Board.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["List","props","title","className","cards","cardsList","map","card","id","Board","state","lists","this","listsComponents","item","React","Component","App","path","test","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gWAOe,SAASA,EAAKC,GAC3B,IAAQC,EAAUD,EAAVC,MACR,OACE,qBAAKC,UAAU,OAAf,SACE,oBAAIA,UAAU,cAAd,SAA6BD,M,MCDpB,SAASF,EAAKC,GAC3B,IAAQG,EAAUH,EAAVG,MACAF,EAAUD,EAAVC,MACFG,EAAYD,EAAME,KAAI,SAACC,GAC3B,OAAO,cAAC,EAAD,CAAoBL,MAAOK,EAAKL,OAArBK,EAAKC,OAEzB,OACE,sBAAKL,UAAU,OAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BD,IAC7B,qBAAKC,UAAU,cAAf,SAA8BE,IAC9B,wBAAQF,UAAU,wBAAlB,6B,UCNeM,E,kDACnB,WAAYR,GAAgB,IAAD,8BACzB,cAAMA,IACDS,MAAQ,CACXR,MAAO,qGACPS,MAAO,CACL,CACEH,GAAI,EACJN,MAAO,iCACPE,MAAO,CACL,CAAEI,GAAI,EAAGN,MAAO,iEAChB,CAAEM,GAAI,EAAGN,MAAO,yFAChB,CAAEM,GAAI,EAAGN,MAAO,kGAGpB,CACEM,GAAI,EACJN,MAAO,0DACPE,MAAO,CACL,CACEI,GAAI,EACJN,MAAO,uGAIb,CACEM,GAAI,EACJN,MAAO,6CACPE,MAAO,CACL,CAAEI,GAAI,EAAGN,MAAO,yFAChB,CAAEM,GAAI,EAAGN,MAAO,0GA7BC,E,0CAoC3B,WACE,IAAQA,EAAUU,KAAKF,MAAfR,MAEFW,EADYD,KAAKF,MAAfC,MAC0CL,KAAI,SAACQ,GACrD,OAAO,cAAC,EAAD,CAAoBZ,MAAOY,EAAKZ,MAAOE,MAAOU,EAAKV,OAAxCU,EAAKN,OAGzB,OACE,sBAAKL,UAAU,QAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BD,IAC9B,wBAAQC,UAAU,yBAAlB,6BAEF,qBAAKA,UAAU,wBAAf,SAAwCU,W,GAlDbE,IAAMC,WCK1BC,MAdf,WACE,OACE,cAAC,IAAD,UACE,qBAAKd,UAAU,MAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOe,KAAK,SAAZ,SACE,cAAC,EAAD,CAAOC,KAAK,cCGTC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cb6be38e.chunk.js","sourcesContent":["import React from 'react';\nimport './Card.scss';\n\ninterface IProps {\n  title: string;\n}\n\nexport default function List(props: IProps): JSX.Element {\n  const { title } = props;\n  return (\n    <div className=\"card\">\n      <h2 className=\"card__title\">{title}</h2>\n    </div>\n  );\n}\n","import React from 'react';\nimport Card from '../Card/Card';\nimport { ICard } from '../../../../common/interfaces/ICard';\nimport './List.scss';\n\ninterface IProps {\n  title: string;\n  cards: ICard[];\n}\n\nexport default function List(props: IProps): JSX.Element {\n  const { cards } = props;\n  const { title } = props;\n  const cardsList = cards.map((card) => {\n    return <Card key={card.id} title={card.title} />;\n  });\n  return (\n    <div className=\"list\">\n      <h2 className=\"list__title\">{title}</h2>\n      <div className=\"list__cards\">{cardsList}</div>\n      <button className=\"list__card-add-button\">Add new card</button>\n    </div>\n  );\n}\n","import React from 'react';\nimport List from './components/List/List';\nimport './Board.scss';\nimport { IList } from '../../common/interfaces/IList';\n\ninterface IProps {\n  test: string;\n}\n\ninterface IState {\n  title: string;\n  lists: Array<IList>;\n}\n\nexport default class Board extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      title: 'Моя тестовая доска',\n      lists: [\n        {\n          id: 1,\n          title: 'Планы',\n          cards: [\n            { id: 1, title: 'помыть кота' },\n            { id: 2, title: 'приготовить суп' },\n            { id: 3, title: 'сходить в магазин' },\n          ],\n        },\n        {\n          id: 2,\n          title: 'В процессе',\n          cards: [\n            {\n              id: 4,\n              title: 'посмотреть сериал',\n            },\n          ],\n        },\n        {\n          id: 3,\n          title: 'Сделано',\n          cards: [\n            { id: 5, title: 'сделать домашку' },\n            { id: 6, title: 'погулять с собакой' },\n          ],\n        },\n      ],\n    };\n  }\n\n  render(): JSX.Element {\n    const { title } = this.state;\n    const { lists } = this.state;\n    const listsComponents: Array<JSX.Element> = lists.map((item): JSX.Element => {\n      return <List key={item.id} title={item.title} cards={item.cards} />;\n    });\n\n    return (\n      <div className=\"board\">\n        <div className=\"board__header\">\n          <h2 className=\"board__title\">{title}</h2>\n          <button className=\"board__list-add-button\">Add new list</button>\n        </div>\n        <div className=\"board__list-container\">{listsComponents}</div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Board from './Pages/Board/Board';\n\nfunction App(): JSX.Element {\n  return (\n    <BrowserRouter>\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/board\">\n            <Board test=\"\" />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}